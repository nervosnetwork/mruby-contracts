#ifndef PROTOCOL_READER_H
#define PROTOCOL_READER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

typedef struct Ckb_Protocol_ProposalShortId Ckb_Protocol_ProposalShortId_t;
typedef const Ckb_Protocol_ProposalShortId_t *Ckb_Protocol_ProposalShortId_struct_t;
typedef Ckb_Protocol_ProposalShortId_t *Ckb_Protocol_ProposalShortId_mutable_struct_t;
typedef const Ckb_Protocol_ProposalShortId_t *Ckb_Protocol_ProposalShortId_vec_t;
typedef Ckb_Protocol_ProposalShortId_t *Ckb_Protocol_ProposalShortId_mutable_vec_t;
typedef struct Ckb_Protocol_H256 Ckb_Protocol_H256_t;
typedef const Ckb_Protocol_H256_t *Ckb_Protocol_H256_struct_t;
typedef Ckb_Protocol_H256_t *Ckb_Protocol_H256_mutable_struct_t;
typedef const Ckb_Protocol_H256_t *Ckb_Protocol_H256_vec_t;
typedef Ckb_Protocol_H256_t *Ckb_Protocol_H256_mutable_vec_t;

typedef const struct Ckb_Protocol_SyncMessage_table *Ckb_Protocol_SyncMessage_table_t;
typedef struct Ckb_Protocol_SyncMessage_table *Ckb_Protocol_SyncMessage_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_SyncMessage_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_SyncMessage_mutable_vec_t;
typedef const struct Ckb_Protocol_Bytes_table *Ckb_Protocol_Bytes_table_t;
typedef struct Ckb_Protocol_Bytes_table *Ckb_Protocol_Bytes_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Bytes_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Bytes_mutable_vec_t;
typedef const struct Ckb_Protocol_GetHeaders_table *Ckb_Protocol_GetHeaders_table_t;
typedef struct Ckb_Protocol_GetHeaders_table *Ckb_Protocol_GetHeaders_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_GetHeaders_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_GetHeaders_mutable_vec_t;
typedef const struct Ckb_Protocol_GetBlocks_table *Ckb_Protocol_GetBlocks_table_t;
typedef struct Ckb_Protocol_GetBlocks_table *Ckb_Protocol_GetBlocks_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_GetBlocks_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_GetBlocks_mutable_vec_t;
typedef const struct Ckb_Protocol_Headers_table *Ckb_Protocol_Headers_table_t;
typedef struct Ckb_Protocol_Headers_table *Ckb_Protocol_Headers_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Headers_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Headers_mutable_vec_t;
typedef const struct Ckb_Protocol_Header_table *Ckb_Protocol_Header_table_t;
typedef struct Ckb_Protocol_Header_table *Ckb_Protocol_Header_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Header_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Header_mutable_vec_t;
typedef const struct Ckb_Protocol_Block_table *Ckb_Protocol_Block_table_t;
typedef struct Ckb_Protocol_Block_table *Ckb_Protocol_Block_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Block_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Block_mutable_vec_t;
typedef const struct Ckb_Protocol_UncleBlock_table *Ckb_Protocol_UncleBlock_table_t;
typedef struct Ckb_Protocol_UncleBlock_table *Ckb_Protocol_UncleBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_UncleBlock_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_UncleBlock_mutable_vec_t;
typedef const struct Ckb_Protocol_Transaction_table *Ckb_Protocol_Transaction_table_t;
typedef struct Ckb_Protocol_Transaction_table *Ckb_Protocol_Transaction_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Transaction_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Transaction_mutable_vec_t;
typedef const struct Ckb_Protocol_Witness_table *Ckb_Protocol_Witness_table_t;
typedef struct Ckb_Protocol_Witness_table *Ckb_Protocol_Witness_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Witness_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Witness_mutable_vec_t;
typedef const struct Ckb_Protocol_OutPoint_table *Ckb_Protocol_OutPoint_table_t;
typedef struct Ckb_Protocol_OutPoint_table *Ckb_Protocol_OutPoint_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_OutPoint_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_OutPoint_mutable_vec_t;
typedef const struct Ckb_Protocol_CellInput_table *Ckb_Protocol_CellInput_table_t;
typedef struct Ckb_Protocol_CellInput_table *Ckb_Protocol_CellInput_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_CellInput_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_CellInput_mutable_vec_t;
typedef const struct Ckb_Protocol_CellOutput_table *Ckb_Protocol_CellOutput_table_t;
typedef struct Ckb_Protocol_CellOutput_table *Ckb_Protocol_CellOutput_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_CellOutput_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_CellOutput_mutable_vec_t;
typedef const struct Ckb_Protocol_Script_table *Ckb_Protocol_Script_table_t;
typedef struct Ckb_Protocol_Script_table *Ckb_Protocol_Script_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Script_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Script_mutable_vec_t;
typedef const struct Ckb_Protocol_RelayMessage_table *Ckb_Protocol_RelayMessage_table_t;
typedef struct Ckb_Protocol_RelayMessage_table *Ckb_Protocol_RelayMessage_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_RelayMessage_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_RelayMessage_mutable_vec_t;
typedef const struct Ckb_Protocol_CompactBlock_table *Ckb_Protocol_CompactBlock_table_t;
typedef struct Ckb_Protocol_CompactBlock_table *Ckb_Protocol_CompactBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_CompactBlock_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_CompactBlock_mutable_vec_t;
typedef const struct Ckb_Protocol_IndexTransaction_table *Ckb_Protocol_IndexTransaction_table_t;
typedef struct Ckb_Protocol_IndexTransaction_table *Ckb_Protocol_IndexTransaction_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_IndexTransaction_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_IndexTransaction_mutable_vec_t;
typedef const struct Ckb_Protocol_RelayTransactionHash_table *Ckb_Protocol_RelayTransactionHash_table_t;
typedef struct Ckb_Protocol_RelayTransactionHash_table *Ckb_Protocol_RelayTransactionHash_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_RelayTransactionHash_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_RelayTransactionHash_mutable_vec_t;
typedef const struct Ckb_Protocol_GetRelayTransaction_table *Ckb_Protocol_GetRelayTransaction_table_t;
typedef struct Ckb_Protocol_GetRelayTransaction_table *Ckb_Protocol_GetRelayTransaction_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_GetRelayTransaction_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_GetRelayTransaction_mutable_vec_t;
typedef const struct Ckb_Protocol_RelayTransaction_table *Ckb_Protocol_RelayTransaction_table_t;
typedef struct Ckb_Protocol_RelayTransaction_table *Ckb_Protocol_RelayTransaction_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_RelayTransaction_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_RelayTransaction_mutable_vec_t;
typedef const struct Ckb_Protocol_GetBlockTransactions_table *Ckb_Protocol_GetBlockTransactions_table_t;
typedef struct Ckb_Protocol_GetBlockTransactions_table *Ckb_Protocol_GetBlockTransactions_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_GetBlockTransactions_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_GetBlockTransactions_mutable_vec_t;
typedef const struct Ckb_Protocol_BlockTransactions_table *Ckb_Protocol_BlockTransactions_table_t;
typedef struct Ckb_Protocol_BlockTransactions_table *Ckb_Protocol_BlockTransactions_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_BlockTransactions_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_BlockTransactions_mutable_vec_t;
typedef const struct Ckb_Protocol_GetBlockProposal_table *Ckb_Protocol_GetBlockProposal_table_t;
typedef struct Ckb_Protocol_GetBlockProposal_table *Ckb_Protocol_GetBlockProposal_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_GetBlockProposal_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_GetBlockProposal_mutable_vec_t;
typedef const struct Ckb_Protocol_BlockProposal_table *Ckb_Protocol_BlockProposal_table_t;
typedef struct Ckb_Protocol_BlockProposal_table *Ckb_Protocol_BlockProposal_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_BlockProposal_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_BlockProposal_mutable_vec_t;
typedef const struct Ckb_Protocol_SetFilter_table *Ckb_Protocol_SetFilter_table_t;
typedef struct Ckb_Protocol_SetFilter_table *Ckb_Protocol_SetFilter_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_SetFilter_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_SetFilter_mutable_vec_t;
typedef const struct Ckb_Protocol_AddFilter_table *Ckb_Protocol_AddFilter_table_t;
typedef struct Ckb_Protocol_AddFilter_table *Ckb_Protocol_AddFilter_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_AddFilter_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_AddFilter_mutable_vec_t;
typedef const struct Ckb_Protocol_ClearFilter_table *Ckb_Protocol_ClearFilter_table_t;
typedef struct Ckb_Protocol_ClearFilter_table *Ckb_Protocol_ClearFilter_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_ClearFilter_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_ClearFilter_mutable_vec_t;
typedef const struct Ckb_Protocol_FilteredBlock_table *Ckb_Protocol_FilteredBlock_table_t;
typedef struct Ckb_Protocol_FilteredBlock_table *Ckb_Protocol_FilteredBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_FilteredBlock_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_FilteredBlock_mutable_vec_t;
typedef const struct Ckb_Protocol_MerkleProof_table *Ckb_Protocol_MerkleProof_table_t;
typedef struct Ckb_Protocol_MerkleProof_table *Ckb_Protocol_MerkleProof_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_MerkleProof_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_MerkleProof_mutable_vec_t;
typedef const struct Ckb_Protocol_TimeMessage_table *Ckb_Protocol_TimeMessage_table_t;
typedef struct Ckb_Protocol_TimeMessage_table *Ckb_Protocol_TimeMessage_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_TimeMessage_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_TimeMessage_mutable_vec_t;
typedef const struct Ckb_Protocol_Time_table *Ckb_Protocol_Time_table_t;
typedef struct Ckb_Protocol_Time_table *Ckb_Protocol_Time_mutable_table_t;
typedef const flatbuffers_uoffset_t *Ckb_Protocol_Time_vec_t;
typedef flatbuffers_uoffset_t *Ckb_Protocol_Time_mutable_vec_t;
#ifndef Ckb_Protocol_SyncMessage_identifier
#define Ckb_Protocol_SyncMessage_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_SyncMessage_type_hash ((flatbuffers_thash_t)0x1e5b73cf)
#define Ckb_Protocol_SyncMessage_type_identifier "\xcf\x73\x5b\x1e"
#ifndef Ckb_Protocol_Bytes_identifier
#define Ckb_Protocol_Bytes_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Bytes_type_hash ((flatbuffers_thash_t)0xd1424a)
#define Ckb_Protocol_Bytes_type_identifier "\x4a\x42\xd1\x00"
#ifndef Ckb_Protocol_GetHeaders_identifier
#define Ckb_Protocol_GetHeaders_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_GetHeaders_type_hash ((flatbuffers_thash_t)0x45805aad)
#define Ckb_Protocol_GetHeaders_type_identifier "\xad\x5a\x80\x45"
#ifndef Ckb_Protocol_GetBlocks_identifier
#define Ckb_Protocol_GetBlocks_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_GetBlocks_type_hash ((flatbuffers_thash_t)0x29433447)
#define Ckb_Protocol_GetBlocks_type_identifier "\x47\x34\x43\x29"
#ifndef Ckb_Protocol_Headers_identifier
#define Ckb_Protocol_Headers_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Headers_type_hash ((flatbuffers_thash_t)0x6a8e30df)
#define Ckb_Protocol_Headers_type_identifier "\xdf\x30\x8e\x6a"
#ifndef Ckb_Protocol_Header_identifier
#define Ckb_Protocol_Header_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Header_type_hash ((flatbuffers_thash_t)0x3bf6d376)
#define Ckb_Protocol_Header_type_identifier "\x76\xd3\xf6\x3b"
#ifndef Ckb_Protocol_Block_identifier
#define Ckb_Protocol_Block_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Block_type_hash ((flatbuffers_thash_t)0x7dca81f0)
#define Ckb_Protocol_Block_type_identifier "\xf0\x81\xca\x7d"
#ifndef Ckb_Protocol_UncleBlock_identifier
#define Ckb_Protocol_UncleBlock_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_UncleBlock_type_hash ((flatbuffers_thash_t)0x64c6e4b)
#define Ckb_Protocol_UncleBlock_type_identifier "\x4b\x6e\x4c\x06"
#ifndef Ckb_Protocol_Transaction_identifier
#define Ckb_Protocol_Transaction_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Transaction_type_hash ((flatbuffers_thash_t)0x67bc25a1)
#define Ckb_Protocol_Transaction_type_identifier "\xa1\x25\xbc\x67"
#ifndef Ckb_Protocol_Witness_identifier
#define Ckb_Protocol_Witness_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Witness_type_hash ((flatbuffers_thash_t)0x987a135a)
#define Ckb_Protocol_Witness_type_identifier "\x5a\x13\x7a\x98"
#ifndef Ckb_Protocol_OutPoint_identifier
#define Ckb_Protocol_OutPoint_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_OutPoint_type_hash ((flatbuffers_thash_t)0xfbbcc2ed)
#define Ckb_Protocol_OutPoint_type_identifier "\xed\xc2\xbc\xfb"
#ifndef Ckb_Protocol_CellInput_identifier
#define Ckb_Protocol_CellInput_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_CellInput_type_hash ((flatbuffers_thash_t)0xb33adf21)
#define Ckb_Protocol_CellInput_type_identifier "\x21\xdf\x3a\xb3"
#ifndef Ckb_Protocol_CellOutput_identifier
#define Ckb_Protocol_CellOutput_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_CellOutput_type_hash ((flatbuffers_thash_t)0xfdbc155e)
#define Ckb_Protocol_CellOutput_type_identifier "\x5e\x15\xbc\xfd"
#ifndef Ckb_Protocol_Script_identifier
#define Ckb_Protocol_Script_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Script_type_hash ((flatbuffers_thash_t)0x4e9309a8)
#define Ckb_Protocol_Script_type_identifier "\xa8\x09\x93\x4e"
#ifndef Ckb_Protocol_RelayMessage_identifier
#define Ckb_Protocol_RelayMessage_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_RelayMessage_type_hash ((flatbuffers_thash_t)0x3b5fe0eb)
#define Ckb_Protocol_RelayMessage_type_identifier "\xeb\xe0\x5f\x3b"
#ifndef Ckb_Protocol_CompactBlock_identifier
#define Ckb_Protocol_CompactBlock_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_CompactBlock_type_hash ((flatbuffers_thash_t)0x22848a39)
#define Ckb_Protocol_CompactBlock_type_identifier "\x39\x8a\x84\x22"
#ifndef Ckb_Protocol_IndexTransaction_identifier
#define Ckb_Protocol_IndexTransaction_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_IndexTransaction_type_hash ((flatbuffers_thash_t)0x74d36d43)
#define Ckb_Protocol_IndexTransaction_type_identifier "\x43\x6d\xd3\x74"
#ifndef Ckb_Protocol_RelayTransactionHash_identifier
#define Ckb_Protocol_RelayTransactionHash_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_RelayTransactionHash_type_hash ((flatbuffers_thash_t)0x9384cb24)
#define Ckb_Protocol_RelayTransactionHash_type_identifier "\x24\xcb\x84\x93"
#ifndef Ckb_Protocol_GetRelayTransaction_identifier
#define Ckb_Protocol_GetRelayTransaction_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_GetRelayTransaction_type_hash ((flatbuffers_thash_t)0xe2783ba)
#define Ckb_Protocol_GetRelayTransaction_type_identifier "\xba\x83\x27\x0e"
#ifndef Ckb_Protocol_RelayTransaction_identifier
#define Ckb_Protocol_RelayTransaction_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_RelayTransaction_type_hash ((flatbuffers_thash_t)0x37cdf464)
#define Ckb_Protocol_RelayTransaction_type_identifier "\x64\xf4\xcd\x37"
#ifndef Ckb_Protocol_GetBlockTransactions_identifier
#define Ckb_Protocol_GetBlockTransactions_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_GetBlockTransactions_type_hash ((flatbuffers_thash_t)0xeb251d0b)
#define Ckb_Protocol_GetBlockTransactions_type_identifier "\x0b\x1d\x25\xeb"
#ifndef Ckb_Protocol_BlockTransactions_identifier
#define Ckb_Protocol_BlockTransactions_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_BlockTransactions_type_hash ((flatbuffers_thash_t)0xddcba841)
#define Ckb_Protocol_BlockTransactions_type_identifier "\x41\xa8\xcb\xdd"
#ifndef Ckb_Protocol_GetBlockProposal_identifier
#define Ckb_Protocol_GetBlockProposal_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_GetBlockProposal_type_hash ((flatbuffers_thash_t)0xabffa66c)
#define Ckb_Protocol_GetBlockProposal_type_identifier "\x6c\xa6\xff\xab"
#ifndef Ckb_Protocol_BlockProposal_identifier
#define Ckb_Protocol_BlockProposal_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_BlockProposal_type_hash ((flatbuffers_thash_t)0x8523d6b6)
#define Ckb_Protocol_BlockProposal_type_identifier "\xb6\xd6\x23\x85"
#ifndef Ckb_Protocol_ProposalShortId_identifier
#define Ckb_Protocol_ProposalShortId_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_ProposalShortId_type_hash ((flatbuffers_thash_t)0xd47f76bc)
#define Ckb_Protocol_ProposalShortId_type_identifier "\xbc\x76\x7f\xd4"
#ifndef Ckb_Protocol_H256_identifier
#define Ckb_Protocol_H256_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_H256_type_hash ((flatbuffers_thash_t)0x35ce4b52)
#define Ckb_Protocol_H256_type_identifier "\x52\x4b\xce\x35"
#ifndef Ckb_Protocol_SetFilter_identifier
#define Ckb_Protocol_SetFilter_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_SetFilter_type_hash ((flatbuffers_thash_t)0x4dc475b7)
#define Ckb_Protocol_SetFilter_type_identifier "\xb7\x75\xc4\x4d"
#ifndef Ckb_Protocol_AddFilter_identifier
#define Ckb_Protocol_AddFilter_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_AddFilter_type_hash ((flatbuffers_thash_t)0x3af5a7d4)
#define Ckb_Protocol_AddFilter_type_identifier "\xd4\xa7\xf5\x3a"
#ifndef Ckb_Protocol_ClearFilter_identifier
#define Ckb_Protocol_ClearFilter_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_ClearFilter_type_hash ((flatbuffers_thash_t)0xd5089c62)
#define Ckb_Protocol_ClearFilter_type_identifier "\x62\x9c\x08\xd5"
#ifndef Ckb_Protocol_FilteredBlock_identifier
#define Ckb_Protocol_FilteredBlock_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_FilteredBlock_type_hash ((flatbuffers_thash_t)0xf12df2e1)
#define Ckb_Protocol_FilteredBlock_type_identifier "\xe1\xf2\x2d\xf1"
#ifndef Ckb_Protocol_MerkleProof_identifier
#define Ckb_Protocol_MerkleProof_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_MerkleProof_type_hash ((flatbuffers_thash_t)0x6e02704d)
#define Ckb_Protocol_MerkleProof_type_identifier "\x4d\x70\x02\x6e"
#ifndef Ckb_Protocol_TimeMessage_identifier
#define Ckb_Protocol_TimeMessage_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_TimeMessage_type_hash ((flatbuffers_thash_t)0x918ecf4d)
#define Ckb_Protocol_TimeMessage_type_identifier "\x4d\xcf\x8e\x91"
#ifndef Ckb_Protocol_Time_identifier
#define Ckb_Protocol_Time_identifier flatbuffers_identifier
#endif
#define Ckb_Protocol_Time_type_hash ((flatbuffers_thash_t)0xcd85c68e)
#define Ckb_Protocol_Time_type_identifier "\x8e\xc6\x85\xcd"


struct Ckb_Protocol_ProposalShortId {
    alignas(1) uint8_t u0;
    alignas(1) uint8_t u1;
    alignas(1) uint8_t u2;
    alignas(1) uint8_t u3;
    alignas(1) uint8_t u4;
    alignas(1) uint8_t u5;
    alignas(1) uint8_t u6;
    alignas(1) uint8_t u7;
    alignas(1) uint8_t u8;
    alignas(1) uint8_t u9;
};
static_assert(sizeof(Ckb_Protocol_ProposalShortId_t) == 10, "struct size mismatch");

static inline const Ckb_Protocol_ProposalShortId_t *Ckb_Protocol_ProposalShortId__const_ptr_add(const Ckb_Protocol_ProposalShortId_t *p, size_t i) { return p + i; }
static inline Ckb_Protocol_ProposalShortId_t *Ckb_Protocol_ProposalShortId__ptr_add(Ckb_Protocol_ProposalShortId_t *p, size_t i) { return p + i; }
static inline Ckb_Protocol_ProposalShortId_struct_t Ckb_Protocol_ProposalShortId_vec_at(Ckb_Protocol_ProposalShortId_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t Ckb_Protocol_ProposalShortId__size() { return 10; }
static inline size_t Ckb_Protocol_ProposalShortId_vec_len(Ckb_Protocol_ProposalShortId_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(Ckb_Protocol_ProposalShortId)

__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u0, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u1, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u2, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u3, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u4, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u5, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u6, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u7, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u8, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_ProposalShortId, u9, flatbuffers_uint8, uint8_t)

struct Ckb_Protocol_H256 {
    alignas(1) uint8_t u0;
    alignas(1) uint8_t u1;
    alignas(1) uint8_t u2;
    alignas(1) uint8_t u3;
    alignas(1) uint8_t u4;
    alignas(1) uint8_t u5;
    alignas(1) uint8_t u6;
    alignas(1) uint8_t u7;
    alignas(1) uint8_t u8;
    alignas(1) uint8_t u9;
    alignas(1) uint8_t u10;
    alignas(1) uint8_t u11;
    alignas(1) uint8_t u12;
    alignas(1) uint8_t u13;
    alignas(1) uint8_t u14;
    alignas(1) uint8_t u15;
    alignas(1) uint8_t u16;
    alignas(1) uint8_t u17;
    alignas(1) uint8_t u18;
    alignas(1) uint8_t u19;
    alignas(1) uint8_t u20;
    alignas(1) uint8_t u21;
    alignas(1) uint8_t u22;
    alignas(1) uint8_t u23;
    alignas(1) uint8_t u24;
    alignas(1) uint8_t u25;
    alignas(1) uint8_t u26;
    alignas(1) uint8_t u27;
    alignas(1) uint8_t u28;
    alignas(1) uint8_t u29;
    alignas(1) uint8_t u30;
    alignas(1) uint8_t u31;
};
static_assert(sizeof(Ckb_Protocol_H256_t) == 32, "struct size mismatch");

static inline const Ckb_Protocol_H256_t *Ckb_Protocol_H256__const_ptr_add(const Ckb_Protocol_H256_t *p, size_t i) { return p + i; }
static inline Ckb_Protocol_H256_t *Ckb_Protocol_H256__ptr_add(Ckb_Protocol_H256_t *p, size_t i) { return p + i; }
static inline Ckb_Protocol_H256_struct_t Ckb_Protocol_H256_vec_at(Ckb_Protocol_H256_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t Ckb_Protocol_H256__size() { return 32; }
static inline size_t Ckb_Protocol_H256_vec_len(Ckb_Protocol_H256_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(Ckb_Protocol_H256)

__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u0, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u1, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u2, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u3, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u4, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u5, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u6, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u7, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u8, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u9, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u10, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u11, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u12, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u13, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u14, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u15, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u16, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u17, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u18, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u19, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u20, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u21, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u22, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u23, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u24, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u25, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u26, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u27, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u28, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u29, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u30, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Ckb_Protocol_H256, u31, flatbuffers_uint8, uint8_t)

typedef uint8_t Ckb_Protocol_SyncPayload_union_type_t;
__flatbuffers_define_integer_type(Ckb_Protocol_SyncPayload, Ckb_Protocol_SyncPayload_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, Ckb_Protocol_SyncPayload)
#define Ckb_Protocol_SyncPayload_NONE ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(0))
#define Ckb_Protocol_SyncPayload_GetHeaders ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(1))
#define Ckb_Protocol_SyncPayload_Headers ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(2))
#define Ckb_Protocol_SyncPayload_GetBlocks ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(3))
#define Ckb_Protocol_SyncPayload_Block ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(4))
#define Ckb_Protocol_SyncPayload_SetFilter ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(5))
#define Ckb_Protocol_SyncPayload_AddFilter ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(6))
#define Ckb_Protocol_SyncPayload_ClearFilter ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(7))
#define Ckb_Protocol_SyncPayload_FilteredBlock ((Ckb_Protocol_SyncPayload_union_type_t)UINT8_C(8))

static inline const char *Ckb_Protocol_SyncPayload_type_name(Ckb_Protocol_SyncPayload_union_type_t type)
{
    switch (type) {
    case Ckb_Protocol_SyncPayload_NONE: return "NONE";
    case Ckb_Protocol_SyncPayload_GetHeaders: return "GetHeaders";
    case Ckb_Protocol_SyncPayload_Headers: return "Headers";
    case Ckb_Protocol_SyncPayload_GetBlocks: return "GetBlocks";
    case Ckb_Protocol_SyncPayload_Block: return "Block";
    case Ckb_Protocol_SyncPayload_SetFilter: return "SetFilter";
    case Ckb_Protocol_SyncPayload_AddFilter: return "AddFilter";
    case Ckb_Protocol_SyncPayload_ClearFilter: return "ClearFilter";
    case Ckb_Protocol_SyncPayload_FilteredBlock: return "FilteredBlock";
    default: return "";
    }
}

static inline int Ckb_Protocol_SyncPayload_is_known_type(Ckb_Protocol_SyncPayload_union_type_t type)
{
    switch (type) {
    case Ckb_Protocol_SyncPayload_NONE: return 1;
    case Ckb_Protocol_SyncPayload_GetHeaders: return 1;
    case Ckb_Protocol_SyncPayload_Headers: return 1;
    case Ckb_Protocol_SyncPayload_GetBlocks: return 1;
    case Ckb_Protocol_SyncPayload_Block: return 1;
    case Ckb_Protocol_SyncPayload_SetFilter: return 1;
    case Ckb_Protocol_SyncPayload_AddFilter: return 1;
    case Ckb_Protocol_SyncPayload_ClearFilter: return 1;
    case Ckb_Protocol_SyncPayload_FilteredBlock: return 1;
    default: return 0;
    }
}


struct Ckb_Protocol_SyncMessage_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_SyncMessage_vec_len(Ckb_Protocol_SyncMessage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_SyncMessage_table_t Ckb_Protocol_SyncMessage_vec_at(Ckb_Protocol_SyncMessage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_SyncMessage_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_SyncMessage)

__flatbuffers_define_union_field(flatbuffers_, 1, Ckb_Protocol_SyncMessage, payload, Ckb_Protocol_SyncPayload, 0)

struct Ckb_Protocol_Bytes_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Bytes_vec_len(Ckb_Protocol_Bytes_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Bytes_table_t Ckb_Protocol_Bytes_vec_at(Ckb_Protocol_Bytes_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Bytes_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Bytes)

__flatbuffers_define_vector_field(0, Ckb_Protocol_Bytes, seq, flatbuffers_uint8_vec_t, 0)

struct Ckb_Protocol_GetHeaders_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_GetHeaders_vec_len(Ckb_Protocol_GetHeaders_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_GetHeaders_table_t Ckb_Protocol_GetHeaders_vec_at(Ckb_Protocol_GetHeaders_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_GetHeaders_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_GetHeaders)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_GetHeaders, version, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(1, Ckb_Protocol_GetHeaders, block_locator_hashes, Ckb_Protocol_H256_vec_t, 0)
__flatbuffers_define_struct_field(2, Ckb_Protocol_GetHeaders, hash_stop, Ckb_Protocol_H256_struct_t, 0)

struct Ckb_Protocol_GetBlocks_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_GetBlocks_vec_len(Ckb_Protocol_GetBlocks_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_GetBlocks_table_t Ckb_Protocol_GetBlocks_vec_at(Ckb_Protocol_GetBlocks_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_GetBlocks_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_GetBlocks)

__flatbuffers_define_vector_field(0, Ckb_Protocol_GetBlocks, block_hashes, Ckb_Protocol_H256_vec_t, 0)

struct Ckb_Protocol_Headers_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Headers_vec_len(Ckb_Protocol_Headers_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Headers_table_t Ckb_Protocol_Headers_vec_at(Ckb_Protocol_Headers_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Headers_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Headers)

__flatbuffers_define_vector_field(0, Ckb_Protocol_Headers, headers, Ckb_Protocol_Header_vec_t, 0)

struct Ckb_Protocol_Header_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Header_vec_len(Ckb_Protocol_Header_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Header_table_t Ckb_Protocol_Header_vec_at(Ckb_Protocol_Header_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Header_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Header)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_Header, version, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_struct_field(1, Ckb_Protocol_Header, parent_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_scalar_field(2, Ckb_Protocol_Header, timestamp, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_scalar_field(3, Ckb_Protocol_Header, number, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_struct_field(4, Ckb_Protocol_Header, transactions_root, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_struct_field(5, Ckb_Protocol_Header, witnesses_root, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_struct_field(6, Ckb_Protocol_Header, proposals_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_table_field(7, Ckb_Protocol_Header, difficulty, Ckb_Protocol_Bytes_table_t, 0)
__flatbuffers_define_scalar_field(8, Ckb_Protocol_Header, nonce, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_table_field(9, Ckb_Protocol_Header, proof, Ckb_Protocol_Bytes_table_t, 0)
__flatbuffers_define_struct_field(10, Ckb_Protocol_Header, uncles_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_scalar_field(11, Ckb_Protocol_Header, uncles_count, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(12, Ckb_Protocol_Header, epoch, flatbuffers_uint64, uint64_t, UINT64_C(0))

struct Ckb_Protocol_Block_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Block_vec_len(Ckb_Protocol_Block_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Block_table_t Ckb_Protocol_Block_vec_at(Ckb_Protocol_Block_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Block_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Block)

__flatbuffers_define_table_field(0, Ckb_Protocol_Block, header, Ckb_Protocol_Header_table_t, 0)
__flatbuffers_define_vector_field(1, Ckb_Protocol_Block, uncles, Ckb_Protocol_UncleBlock_vec_t, 0)
__flatbuffers_define_vector_field(2, Ckb_Protocol_Block, transactions, Ckb_Protocol_Transaction_vec_t, 0)
__flatbuffers_define_vector_field(3, Ckb_Protocol_Block, proposals, Ckb_Protocol_ProposalShortId_vec_t, 0)

struct Ckb_Protocol_UncleBlock_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_UncleBlock_vec_len(Ckb_Protocol_UncleBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_UncleBlock_table_t Ckb_Protocol_UncleBlock_vec_at(Ckb_Protocol_UncleBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_UncleBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_UncleBlock)

__flatbuffers_define_table_field(0, Ckb_Protocol_UncleBlock, header, Ckb_Protocol_Header_table_t, 0)
__flatbuffers_define_vector_field(1, Ckb_Protocol_UncleBlock, proposals, Ckb_Protocol_ProposalShortId_vec_t, 0)

struct Ckb_Protocol_Transaction_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Transaction_vec_len(Ckb_Protocol_Transaction_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Transaction_table_t Ckb_Protocol_Transaction_vec_at(Ckb_Protocol_Transaction_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Transaction_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Transaction)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_Transaction, version, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(1, Ckb_Protocol_Transaction, deps, Ckb_Protocol_OutPoint_vec_t, 0)
__flatbuffers_define_vector_field(2, Ckb_Protocol_Transaction, inputs, Ckb_Protocol_CellInput_vec_t, 0)
__flatbuffers_define_vector_field(3, Ckb_Protocol_Transaction, outputs, Ckb_Protocol_CellOutput_vec_t, 0)
__flatbuffers_define_vector_field(4, Ckb_Protocol_Transaction, witnesses, Ckb_Protocol_Witness_vec_t, 0)

struct Ckb_Protocol_Witness_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Witness_vec_len(Ckb_Protocol_Witness_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Witness_table_t Ckb_Protocol_Witness_vec_at(Ckb_Protocol_Witness_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Witness_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Witness)

__flatbuffers_define_vector_field(0, Ckb_Protocol_Witness, data, Ckb_Protocol_Bytes_vec_t, 0)

struct Ckb_Protocol_OutPoint_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_OutPoint_vec_len(Ckb_Protocol_OutPoint_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_OutPoint_table_t Ckb_Protocol_OutPoint_vec_at(Ckb_Protocol_OutPoint_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_OutPoint_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_OutPoint)

__flatbuffers_define_struct_field(0, Ckb_Protocol_OutPoint, block_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_struct_field(1, Ckb_Protocol_OutPoint, tx_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_scalar_field(2, Ckb_Protocol_OutPoint, index, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct Ckb_Protocol_CellInput_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_CellInput_vec_len(Ckb_Protocol_CellInput_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_CellInput_table_t Ckb_Protocol_CellInput_vec_at(Ckb_Protocol_CellInput_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_CellInput_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_CellInput)

__flatbuffers_define_struct_field(0, Ckb_Protocol_CellInput, block_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_struct_field(1, Ckb_Protocol_CellInput, tx_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_scalar_field(2, Ckb_Protocol_CellInput, index, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(3, Ckb_Protocol_CellInput, since, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_vector_field(4, Ckb_Protocol_CellInput, args, Ckb_Protocol_Bytes_vec_t, 0)

struct Ckb_Protocol_CellOutput_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_CellOutput_vec_len(Ckb_Protocol_CellOutput_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_CellOutput_table_t Ckb_Protocol_CellOutput_vec_at(Ckb_Protocol_CellOutput_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_CellOutput_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_CellOutput)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_CellOutput, capacity, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_table_field(1, Ckb_Protocol_CellOutput, data, Ckb_Protocol_Bytes_table_t, 0)
__flatbuffers_define_table_field(2, Ckb_Protocol_CellOutput, lock, Ckb_Protocol_Script_table_t, 0)
__flatbuffers_define_table_field(3, Ckb_Protocol_CellOutput, type, Ckb_Protocol_Script_table_t, 0)

struct Ckb_Protocol_Script_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Script_vec_len(Ckb_Protocol_Script_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Script_table_t Ckb_Protocol_Script_vec_at(Ckb_Protocol_Script_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Script_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Script)

__flatbuffers_define_vector_field(0, Ckb_Protocol_Script, args, Ckb_Protocol_Bytes_vec_t, 0)
__flatbuffers_define_struct_field(1, Ckb_Protocol_Script, code_hash, Ckb_Protocol_H256_struct_t, 0)
typedef uint8_t Ckb_Protocol_RelayPayload_union_type_t;
__flatbuffers_define_integer_type(Ckb_Protocol_RelayPayload, Ckb_Protocol_RelayPayload_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, Ckb_Protocol_RelayPayload)
#define Ckb_Protocol_RelayPayload_NONE ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(0))
#define Ckb_Protocol_RelayPayload_CompactBlock ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(1))
#define Ckb_Protocol_RelayPayload_RelayTransaction ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(2))
#define Ckb_Protocol_RelayPayload_RelayTransactionHash ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(3))
#define Ckb_Protocol_RelayPayload_GetRelayTransaction ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(4))
#define Ckb_Protocol_RelayPayload_GetBlockTransactions ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(5))
#define Ckb_Protocol_RelayPayload_BlockTransactions ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(6))
#define Ckb_Protocol_RelayPayload_GetBlockProposal ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(7))
#define Ckb_Protocol_RelayPayload_BlockProposal ((Ckb_Protocol_RelayPayload_union_type_t)UINT8_C(8))

static inline const char *Ckb_Protocol_RelayPayload_type_name(Ckb_Protocol_RelayPayload_union_type_t type)
{
    switch (type) {
    case Ckb_Protocol_RelayPayload_NONE: return "NONE";
    case Ckb_Protocol_RelayPayload_CompactBlock: return "CompactBlock";
    case Ckb_Protocol_RelayPayload_RelayTransaction: return "RelayTransaction";
    case Ckb_Protocol_RelayPayload_RelayTransactionHash: return "RelayTransactionHash";
    case Ckb_Protocol_RelayPayload_GetRelayTransaction: return "GetRelayTransaction";
    case Ckb_Protocol_RelayPayload_GetBlockTransactions: return "GetBlockTransactions";
    case Ckb_Protocol_RelayPayload_BlockTransactions: return "BlockTransactions";
    case Ckb_Protocol_RelayPayload_GetBlockProposal: return "GetBlockProposal";
    case Ckb_Protocol_RelayPayload_BlockProposal: return "BlockProposal";
    default: return "";
    }
}

static inline int Ckb_Protocol_RelayPayload_is_known_type(Ckb_Protocol_RelayPayload_union_type_t type)
{
    switch (type) {
    case Ckb_Protocol_RelayPayload_NONE: return 1;
    case Ckb_Protocol_RelayPayload_CompactBlock: return 1;
    case Ckb_Protocol_RelayPayload_RelayTransaction: return 1;
    case Ckb_Protocol_RelayPayload_RelayTransactionHash: return 1;
    case Ckb_Protocol_RelayPayload_GetRelayTransaction: return 1;
    case Ckb_Protocol_RelayPayload_GetBlockTransactions: return 1;
    case Ckb_Protocol_RelayPayload_BlockTransactions: return 1;
    case Ckb_Protocol_RelayPayload_GetBlockProposal: return 1;
    case Ckb_Protocol_RelayPayload_BlockProposal: return 1;
    default: return 0;
    }
}


struct Ckb_Protocol_RelayMessage_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_RelayMessage_vec_len(Ckb_Protocol_RelayMessage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_RelayMessage_table_t Ckb_Protocol_RelayMessage_vec_at(Ckb_Protocol_RelayMessage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_RelayMessage_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_RelayMessage)

__flatbuffers_define_union_field(flatbuffers_, 1, Ckb_Protocol_RelayMessage, payload, Ckb_Protocol_RelayPayload, 0)

struct Ckb_Protocol_CompactBlock_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_CompactBlock_vec_len(Ckb_Protocol_CompactBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_CompactBlock_table_t Ckb_Protocol_CompactBlock_vec_at(Ckb_Protocol_CompactBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_CompactBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_CompactBlock)

__flatbuffers_define_table_field(0, Ckb_Protocol_CompactBlock, header, Ckb_Protocol_Header_table_t, 0)
__flatbuffers_define_scalar_field(1, Ckb_Protocol_CompactBlock, nonce, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_vector_field(2, Ckb_Protocol_CompactBlock, short_ids, Ckb_Protocol_Bytes_vec_t, 0)
__flatbuffers_define_vector_field(3, Ckb_Protocol_CompactBlock, prefilled_transactions, Ckb_Protocol_IndexTransaction_vec_t, 0)
__flatbuffers_define_vector_field(4, Ckb_Protocol_CompactBlock, uncles, Ckb_Protocol_UncleBlock_vec_t, 0)
__flatbuffers_define_vector_field(5, Ckb_Protocol_CompactBlock, proposals, Ckb_Protocol_ProposalShortId_vec_t, 0)

struct Ckb_Protocol_IndexTransaction_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_IndexTransaction_vec_len(Ckb_Protocol_IndexTransaction_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_IndexTransaction_table_t Ckb_Protocol_IndexTransaction_vec_at(Ckb_Protocol_IndexTransaction_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_IndexTransaction_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_IndexTransaction)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_IndexTransaction, index, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_table_field(1, Ckb_Protocol_IndexTransaction, transaction, Ckb_Protocol_Transaction_table_t, 0)

struct Ckb_Protocol_RelayTransactionHash_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_RelayTransactionHash_vec_len(Ckb_Protocol_RelayTransactionHash_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_RelayTransactionHash_table_t Ckb_Protocol_RelayTransactionHash_vec_at(Ckb_Protocol_RelayTransactionHash_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_RelayTransactionHash_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_RelayTransactionHash)

__flatbuffers_define_struct_field(0, Ckb_Protocol_RelayTransactionHash, tx_hash, Ckb_Protocol_H256_struct_t, 0)

struct Ckb_Protocol_GetRelayTransaction_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_GetRelayTransaction_vec_len(Ckb_Protocol_GetRelayTransaction_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_GetRelayTransaction_table_t Ckb_Protocol_GetRelayTransaction_vec_at(Ckb_Protocol_GetRelayTransaction_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_GetRelayTransaction_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_GetRelayTransaction)

__flatbuffers_define_struct_field(0, Ckb_Protocol_GetRelayTransaction, tx_hash, Ckb_Protocol_H256_struct_t, 0)

struct Ckb_Protocol_RelayTransaction_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_RelayTransaction_vec_len(Ckb_Protocol_RelayTransaction_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_RelayTransaction_table_t Ckb_Protocol_RelayTransaction_vec_at(Ckb_Protocol_RelayTransaction_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_RelayTransaction_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_RelayTransaction)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_RelayTransaction, cycles, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_table_field(1, Ckb_Protocol_RelayTransaction, transaction, Ckb_Protocol_Transaction_table_t, 0)

struct Ckb_Protocol_GetBlockTransactions_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_GetBlockTransactions_vec_len(Ckb_Protocol_GetBlockTransactions_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_GetBlockTransactions_table_t Ckb_Protocol_GetBlockTransactions_vec_at(Ckb_Protocol_GetBlockTransactions_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_GetBlockTransactions_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_GetBlockTransactions)

__flatbuffers_define_struct_field(0, Ckb_Protocol_GetBlockTransactions, block_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_vector_field(1, Ckb_Protocol_GetBlockTransactions, indexes, flatbuffers_uint32_vec_t, 0)

struct Ckb_Protocol_BlockTransactions_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_BlockTransactions_vec_len(Ckb_Protocol_BlockTransactions_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_BlockTransactions_table_t Ckb_Protocol_BlockTransactions_vec_at(Ckb_Protocol_BlockTransactions_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_BlockTransactions_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_BlockTransactions)

__flatbuffers_define_struct_field(0, Ckb_Protocol_BlockTransactions, block_hash, Ckb_Protocol_H256_struct_t, 0)
__flatbuffers_define_vector_field(1, Ckb_Protocol_BlockTransactions, transactions, Ckb_Protocol_Transaction_vec_t, 0)

struct Ckb_Protocol_GetBlockProposal_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_GetBlockProposal_vec_len(Ckb_Protocol_GetBlockProposal_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_GetBlockProposal_table_t Ckb_Protocol_GetBlockProposal_vec_at(Ckb_Protocol_GetBlockProposal_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_GetBlockProposal_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_GetBlockProposal)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_GetBlockProposal, block_number, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_vector_field(1, Ckb_Protocol_GetBlockProposal, proposals, Ckb_Protocol_ProposalShortId_vec_t, 0)

struct Ckb_Protocol_BlockProposal_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_BlockProposal_vec_len(Ckb_Protocol_BlockProposal_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_BlockProposal_table_t Ckb_Protocol_BlockProposal_vec_at(Ckb_Protocol_BlockProposal_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_BlockProposal_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_BlockProposal)

__flatbuffers_define_vector_field(0, Ckb_Protocol_BlockProposal, transactions, Ckb_Protocol_Transaction_vec_t, 0)

struct Ckb_Protocol_SetFilter_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_SetFilter_vec_len(Ckb_Protocol_SetFilter_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_SetFilter_table_t Ckb_Protocol_SetFilter_vec_at(Ckb_Protocol_SetFilter_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_SetFilter_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_SetFilter)

__flatbuffers_define_vector_field(0, Ckb_Protocol_SetFilter, filter, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_scalar_field(1, Ckb_Protocol_SetFilter, num_hashes, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, Ckb_Protocol_SetFilter, hash_seed, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct Ckb_Protocol_AddFilter_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_AddFilter_vec_len(Ckb_Protocol_AddFilter_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_AddFilter_table_t Ckb_Protocol_AddFilter_vec_at(Ckb_Protocol_AddFilter_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_AddFilter_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_AddFilter)

__flatbuffers_define_vector_field(0, Ckb_Protocol_AddFilter, filter, flatbuffers_uint8_vec_t, 0)

struct Ckb_Protocol_ClearFilter_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_ClearFilter_vec_len(Ckb_Protocol_ClearFilter_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_ClearFilter_table_t Ckb_Protocol_ClearFilter_vec_at(Ckb_Protocol_ClearFilter_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_ClearFilter_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_ClearFilter)


struct Ckb_Protocol_FilteredBlock_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_FilteredBlock_vec_len(Ckb_Protocol_FilteredBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_FilteredBlock_table_t Ckb_Protocol_FilteredBlock_vec_at(Ckb_Protocol_FilteredBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_FilteredBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_FilteredBlock)

__flatbuffers_define_table_field(0, Ckb_Protocol_FilteredBlock, header, Ckb_Protocol_Header_table_t, 0)
__flatbuffers_define_vector_field(1, Ckb_Protocol_FilteredBlock, transactions, Ckb_Protocol_Transaction_vec_t, 0)
__flatbuffers_define_table_field(2, Ckb_Protocol_FilteredBlock, proof, Ckb_Protocol_MerkleProof_table_t, 0)

struct Ckb_Protocol_MerkleProof_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_MerkleProof_vec_len(Ckb_Protocol_MerkleProof_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_MerkleProof_table_t Ckb_Protocol_MerkleProof_vec_at(Ckb_Protocol_MerkleProof_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_MerkleProof_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_MerkleProof)

__flatbuffers_define_vector_field(0, Ckb_Protocol_MerkleProof, indices, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_vector_field(1, Ckb_Protocol_MerkleProof, lemmas, Ckb_Protocol_H256_vec_t, 0)

struct Ckb_Protocol_TimeMessage_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_TimeMessage_vec_len(Ckb_Protocol_TimeMessage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_TimeMessage_table_t Ckb_Protocol_TimeMessage_vec_at(Ckb_Protocol_TimeMessage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_TimeMessage_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_TimeMessage)

__flatbuffers_define_table_field(0, Ckb_Protocol_TimeMessage, payload, Ckb_Protocol_Time_table_t, 0)

struct Ckb_Protocol_Time_table { uint8_t unused__; };

static inline size_t Ckb_Protocol_Time_vec_len(Ckb_Protocol_Time_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Ckb_Protocol_Time_table_t Ckb_Protocol_Time_vec_at(Ckb_Protocol_Time_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Ckb_Protocol_Time_table_t, vec, i, 0)
__flatbuffers_table_as_root(Ckb_Protocol_Time)

__flatbuffers_define_scalar_field(0, Ckb_Protocol_Time, timestamp, flatbuffers_uint64, uint64_t, UINT64_C(0))


#include "flatcc/flatcc_epilogue.h"
#endif /* PROTOCOL_READER_H */
